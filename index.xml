<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Etusivu on Kangasalan Java-kurssi, syksy 2019</title>
    <link>https://kangluk.github.io/</link>
    <description>Recent content in Etusivu on Kangasalan Java-kurssi, syksy 2019</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fi</language>
    <lastBuildDate>Sun, 28 Sep 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://kangluk.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://kangluk.github.io/posts/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kangluk.github.io/posts/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://kangluk.github.io/posts/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kangluk.github.io/posts/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://kangluk.github.io/posts/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kangluk.github.io/posts/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://kangluk.github.io/posts/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kangluk.github.io/posts/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Aloitus ja asennus</title>
      <link>https://kangluk.github.io/docs/asennus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kangluk.github.io/docs/asennus/</guid>
      <description>Aloitus ja asennus Kurssin alkuun pitää asentaa omalle tietokoneelle kaksi ohjelmaa ja luoda yhdet käyttäjätunnukset tehtävien tekoa ja palautusta varten. Voit noudattaa asennusohjeita allaolevassa järjestyksessä:
Windows  1. Lataa ja asenna Java Jos epäilet, että koneestasi löytyy jo ennestään Java, tarkista asia tämän sivun kohdasta Onko koneessani jo ennestään oikea Java-versio?
Lataa uusin Java 8:n kehitysympäristö (Java SE Development Kit 8u221) osoitteesta http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html.
Todennäköisesti käytössäsi on 64-bittinen Windows-käyttöjärjestelmä, eli lataa tiedosto jdk-8u221-windows-x64.</description>
    </item>
    
    <item>
      <title>Miten vaihtaa uusimpaan kurssiin?</title>
      <link>https://kangluk.github.io/docs/tmc_paivitys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kangluk.github.io/docs/tmc_paivitys/</guid>
      <description>Miten vaihtaa uusimpaan kurssiin? 1. Sulje kaikki vanhan kurssin projektit Näin pyritään välttämään tilannetta, jossa NetBeans kaatuu/hidastuu 70:n projektin ollessa samaan aikaan auki.
 Pienennä projektien &amp;ldquo;tiedostopuut&amp;rdquo; (Macissa kolmio-nappi (ks. kuva), Windowsissa plus-miinus -nappi)  Kuva 1: projektien pienentäminen tapahtuu projektikansion viereisestä napista.
 Valitse kaikki projektit  Ctrl A -pikanäppäin tai klikkaa Shift-näppäin pohjassa ensimmäistä ja viimeistä projektia  Klikkaa hiiren oikealla napilla ensimmäistä projektia ja valitse Close 31 Projects  Kuva 2: kun kaikki projektit on valittu (ks.</description>
    </item>
    
    <item>
      <title>Viikko 1</title>
      <link>https://kangluk.github.io/docs/suoritus/viikko1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kangluk.github.io/docs/suoritus/viikko1/</guid>
      <description>Viikko 1 (13.–18.8.2019) Viikon 1 teoria ja tehtävät Siirry materiaaliin  Viikon 1 osaamistavoitteet Osaat kirjoittaa ohjelmia, jotka lukevat käyttäjältä syötettä ja tekevät laskentaa syötteen perusteella. Tunnet käsitteet muuttuja, ehtolause ja toistolause, ja osaat käyttää näitä ohjelmissasi.
Artun tukidiat viikolle 1 Voit halutessasi lukea, ladata ja/tai tulostaa Artun tekemät tukidiat kullekin kurssin suoritusviikolle. Dioihin on pyritty koostamaan oleellisimmat opittavat asiat kyseiseltä viikolta. Diat ovat saatavilla PDF-muotoisina Google Drivessa:
Siirry dioihin  Osaamistavoitteiden lähde: https://ohjelmointi-19.</description>
    </item>
    
    <item>
      <title>Viikko 2</title>
      <link>https://kangluk.github.io/docs/suoritus/viikko2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kangluk.github.io/docs/suoritus/viikko2/</guid>
      <description>Viikko 2 (19.–25.8.2019) Viikon 2 teoria ja tehtävät Siirry materiaaliin  Viikon 2 osaamistavoitteet Tunnet muutamia osaongelmia sekä niihin liittyviä ratkaisumalleja. Tunnet loogiset operaatiot ja, tai ja ei ja osaat käyttää niitä ehto- ja toistolauseissa. Tunnet käsitteet metodi, metodin parametri, metodin palautusarvo ja ohjelman kutsupino. Osaat luoda metodeja ja ymmärrät miten ohjelman suoritus etenee kun metodia kutsutaan ja toisaalta kun metodikutsusta palataan.
Artun tukidiat viikolle 2 Voit halutessasi lukea, ladata ja/tai tulostaa Artun tekemät tukidiat kullekin kurssin suoritusviikolle.</description>
    </item>
    
  </channel>
</rss>